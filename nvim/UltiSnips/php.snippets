snippet ns "namespace declaration" b
namespace ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '\\')
`};
endsnippet

snippet class "class definition" b
class ${1:name} ${2:extends BaseClass}
{
	${VISUAL}${3:// Body}
}
endsnippet


snippet pf "Public function" b
public function ${1:name}(${2:$param}) ${3:: void}
{
	${VISUAL}${4:return null;}
}
$0
endsnippet


snippet prf "Protected function" b
protected function ${1:name}(${2:$param}) ${3:: void}
{
	${VISUAL}${4:return null;}
}
$0
endsnippet


snippet pvf "Private function" b
private function ${1:name}(${2:$param}) ${3:: void}
{
	${VISUAL}${4:return null;}
}
$0
endsnippet


snippet psf "Public static function" b
public static function ${1:name}(${2:$param})${3:: void}
{
	${VISUAL}${4:return null;}
}
$0
endsnippet


snippet construct "__construct()" b
public function __construct(${1:$dependencies})
{${1/\$(\w+)(, )*/\n        $this->$1 = $$1;/g}
}
$0
endsnippet

snippet foreach
foreach ($${1:variable} as $${2:key}) {
    ${3:// code...}
}
endsnippet
